{"version":3,"sources":["utils/API.js","components/Wrapper/index.js","components/BodyWrapper/index.js","components/BookListWrapper/index.js","components/Jumbotron/index.js","components/SearchBar/index.js","components/BookList/index.js","pages/search.js","pages/saved.js","components/Nav/index.js","pages/details.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getBooks","req","res","console","log","query","axios","get","deleteBook","id","delete","saveBook","bookData","post","Wrapper","props","react_default","a","createElement","className","children","BodyWrapper","BookListWrapper","Jumbotron","SearchBar","type","name","onChange","placeholder","aria-label","aria-describedby","onClick","BookList","src","image","title","href","link","author","description","Search","state","books","handleInputChange","event","_event$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","preventDefault","split","join","then","data","items","catch","err","bookTitle","i","length","volumeInfo","authors","imageLinks","thumbnail","infoLink","saved","alert","_this2","this","components_Wrapper","components_Jumbotron","components_BodyWrapper","components_SearchBar","components_BookListWrapper","map","book","components_BookList","key","Component","Nav","Link","to","Detail","match","params","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","Saved","NoMatch","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.80b0fad8.chunk.js","sourcesContent":["\nimport axios from \"axios\";\n\nexport default {\n    getBooks: (req, res) => {\n        console.log(req);\n        const query = \"https://www.googleapis.com/books/v1/volumes?q=\" + req + \"&key=AIzaSyB__MuIhh84N3_niwmya_Erhlfalmw3A-c\"\n        console.log(query);\n        return axios.get(query);\n    },\n\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    },\n\n    saveBook: function(bookData) {\n        // return console.log(bookData);\n        return axios.post(\"/api/books\", bookData);\n    }\n};","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction BodyWrapper(props) {\n    return <div className=\"bodyWrapper\">{props.children}</div>\n}\n\nexport default BodyWrapper;","import React from \"react\";\n\nfunction BookListWrapper(props) {\n    return(\n        <div className=\"bookListWrapper\">{props.children}</div>\n    );\n}\n\nexport default BookListWrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron(props) {\n    return(\n        <div className=\"jumbotron\">\n            <h1 className=\"display-4\">NYT Google Books Search</h1>\n            <p className=\"lead\">This is a simple Google books searching engine, provide you the convenience of quickly looking up books that you are looking forward to read!</p>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchBar(props) {\n    return(\n        <div className=\"searchDiv\">\n            <label id=\"bookSearch\">Book Search</label>\n            <div className=\"input-group mb-3\">\n                <input type=\"text\" className=\"form-control\" name=\"title\" onChange={props.onChange} placeholder=\"Book Title...\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-outline-secondary\" onClick={props.onClick} type=\"button\" id=\"searchBtn\">search</button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default SearchBar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction BookList(props) {\n    return(\n        <div className=\"card bg-light mb-3\">\n            <div className=\"card-body clearfix\">\n                <img className=\"bookImage img-thumbnail\" src={props.image} />\n                <div className=\"infoDiv\">\n                    <button type=\"button\" className=\"btn btn-info\" onClick={() => props.saveBook(props.title)}>Save</button>\n                    &nbsp;\n                    <a href={props.link}><button type=\"button\" className=\"btn btn-secondary\">View</button></a>\n                    <br></br><br></br>\n                    <h5 className=\"card-title\">{props.title}</h5>\n                    <p className=\"author\">{props.author}</p>\n                    <p className=\"card-text\">{props.description}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BookList;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWrapper from \"../components/BodyWrapper\";\nimport BookListWrapper from \"../components/BookListWrapper\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchBar from \"../components/SearchBar\";\nimport BookList from \"../components/BookList\";\n\nclass Search extends Component {\n    state = {\n        books:[],\n        title: \"\",\n        author: \"\",\n        description: \"\",\n        image: \"\",\n        link: \"\"\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        let title = this.state.title;\n        let query = title.split(\" \");\n        query = query.join(\"+\");\n        if(this.state.title) {\n            API.getBooks(query)\n                .then((res) => this.setState({books: res.data.items}))\n                .catch((err) => console.log(err));\n        }\n    };\n\n    saveBook = (bookTitle) => {\n        \n        for(var i = 0; i < this.state.books.length; i++) {\n            if(this.state.books[i].volumeInfo.title === bookTitle) {\n                console.log(this.state.books[i].volumeInfo);\n\n                const bookData = {\n                    authors: this.state.books[i].volumeInfo.authors[0],\n                    description: this.state.books[i].volumeInfo.description,\n                    image: this.state.books[i].volumeInfo.imageLinks.thumbnail,\n                    link: this.state.books[i].volumeInfo.infoLink,\n                    title: this.state.books[i].volumeInfo.title,\n                    saved: true\n                }\n                console.log(bookData);\n                API.saveBook(bookData);\n            }\n        }\n        alert(\"saved!\");\n    }\n    \n    render() {\n        return (\n            <Wrapper>\n                <Jumbotron />\n                <BodyWrapper>\n                    <SearchBar \n                        onChange={this.handleInputChange}\n                        onClick={this.handleFormSubmit}\n                    />\n                    {!this.state.books.length ? (\n                        <h3 className=\"text-center\">Wanna start looking for some books?</h3>\n                    ) : (\n                        \n                        <BookListWrapper>\n                            {this.state.books.map((book) => {\n                                return(\n                                    <BookList\n                                        key={book.volumeInfo.title}\n                                        title={book.volumeInfo.title}\n                                        author={book.volumeInfo.authors}\n                                        description={book.volumeInfo.description}\n                                        image={book.volumeInfo.imageLinks.thumbnail}\n                                        link={book.volumeInfo.infoLink}\n                                        saveBook={this.saveBook}\n                                    />\n                                );\n                            })}\n                        </BookListWrapper>\n                    )}\n                </BodyWrapper>\n            </Wrapper>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWrapper from \"../components/BodyWrapper\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchBar from \"../components/SearchBar\";\nimport BookList from \"../components/BookList\";\n\nclass Search extends Component {\n    state = {\n        // booklist\n      };\n    \n    render() {\n        return (\n            <Wrapper>\n                <Jumbotron />\n                <BodyWrapper>\n\n                    {/* <BookList /> */}\n                </BodyWrapper>\n            </Wrapper>\n        );\n    }\n}\n\nexport default Search;","import React from \"react\";\nimport { Navbar } from \"react-materialize\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n    return(\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <span className=\"navbar-brand mb-0 h1\">NYT Google Books Search</span>\n            <button type=\"button\" className=\"btn btn-light\"><Link to={\"/\"}>Search</Link></button>\n            <button type=\"button\" className=\"btn btn-light\"><Link to={\"/\"}></Link><Link to={\"/saved\"}>Saved</Link></button>\n        </nav>\n    )\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n// import booklist from \"./booklist.json\";\nimport Wrapper from \"../components/Wrapper\";\nimport Nav from \"../components/Nav\";\nimport BodyWrapper from \"../components/BodyWrapper\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchBar from \"../components/SearchBar\";\nimport BookList from \"../components/BookList\";\n\nclass Detail extends Component {\n    state = {\n        book: {}\n    };\n\n    componentDidMount(){\n        API.getBooks(this.props.match.params.id)\n            .then(res => this.setState( { book: res.data } ))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return(\n            <Wrapper>\n                <Jumbotron />\n                <BodyWrapper>\n                    \n                </BodyWrapper>\n            </Wrapper>\n        )\n    }\n\n}\n\nexport default Detail;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/search\";\nimport Saved from \"./pages/saved\";\nimport Detail from \"./pages/details\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route exact path=\"/saved/:id\" component={Detail} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}